#!/bin/bash
#parse incoming message and produce MIA-system-command
# samples from http://www.opennet.ru/docs/RUS/bash_scripting_guide/c5358.html

# Начальное объявление цикла анализа опций.
# a, b, c, d, e, f, g -- это возможные опции (ключи).
# Символ : после опции 'e' указывает на то, что с данной опцией может идти
# дополнительный аргумент.
# Обработка опций командной строки с помощью 'getopts'.

# Попробуйте вызвать этот сценарий как:
# 'scriptname -mn'
# 'scriptname -oq qOption' (qOption может быть любой произвольной строкой.)
# 'scriptname -qXXX -r'
#
# 'scriptname -qr'    - Неожиданный результат: "r" будет воспринят как дополнительный аргумент опции "q"
# 'scriptname -q -r'  - То же самое, что и выше
#  Если опция ожидает дополнительный аргумент ("flag:"), то следующий параметр
#  в командной строке, будет воспринят как дополнительный аргумент этой опции.

help="Usage: [mia] ([-l] | [-i|r module_name])"

if [ $# -lt 1 ] # Проверка количества входных аргументов.
then
   echo $help
   exit 0
fi

while getopts ":li:r:" Option
do
echo $OPTIND
	case $Option in
	l	) echo "Список доступных обработчиков: `ls -d ".."`"
	i	) echo "Включение модуля $Option в список обработчиков.";;
#	n | o	) echo "Сценарий #2: ключ -$Option-";;
#	p	) echo "Сценарий #3: ключ -p-";;
#	q	) echo "Сценарий #4: ключ -q-, с аргументом \"$OPTARG\"";;
# Обратите внимание: с ключом 'q' должен передаваться дополнительный аргумент,
# в противном случае отработает выбор "по-умолчанию".
	r	) echo "Исключение модуля $Option из списка обработчиков.";;
	*	) echo "Выбран недопустимый ключ. $help";;   # ПО-УМОЛЧАНИЮ
	esac
done
shift $(($OPTIND - 1))
# Переход к очередному параметру командной строки.

exit 0
